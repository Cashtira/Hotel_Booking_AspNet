@model QuanLyKhachSan.ViewModel.StatisticViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<main>
    <div class="container-fluid px-4">
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item active">Thống kê doanh thu</li>
        </ol>

        <!-- Biểu đồ doanh thu 12 tháng -->
        @for (int i = 0; i < 12; i++)
        {
            <p style="display:none" id="m@(i+1)">@Model.MonthlyData[i]</p>
        }

        <!-- Biểu đồ doanh thu -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-bar me-1"></i>
                Doanh thu 12 tháng (VND)
            </div>
            <div class="card-body">
                <canvas id="myBarChart" width="100%" height="50"></canvas>
            </div>
        </div>

        <!-- Biểu đồ số lượng người dùng, booking, trạng thái -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-users me-1"></i>
                Số liệu người dùng và booking
            </div>
            <div class="card-body">
                <canvas id="userBookingChart" width="100%" height="50"></canvas>
            </div>
        </div>
    </div>
</main>

<script>
    // Biểu đồ doanh thu 12 tháng
    var ctx = document.getElementById('myBarChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
            datasets: [{
                label: 'Doanh thu (VND)',
                data: [
                    @Model.MonthlyData[0], @Model.MonthlyData[1], @Model.MonthlyData[2], @Model.MonthlyData[3], @Model.MonthlyData[4],
                    @Model.MonthlyData[5], @Model.MonthlyData[6], @Model.MonthlyData[7], @Model.MonthlyData[8], @Model.MonthlyData[9],
                    @Model.MonthlyData[10], @Model.MonthlyData[11]
                ],
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Biểu đồ số liệu người dùng và booking
    var userBookingCtx = document.getElementById('userBookingChart').getContext('2d');
    var userBookingChart = new Chart(userBookingCtx, {
        type: 'doughnut',
        data: {
            labels: ['Số lượng người dùng', 'Số lượng booking', 'Số lượng booking hoàn thành', 'Số lượng booking hủy'],
            datasets: [{
                label: 'Thông kê booking và người dùng',
                data: [
                    @Model.UserCount, @Model.BookingCount, @Model.BookingCompletedCount, @Model.BookingCancelledCount
                ],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 99, 132, 0.2)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 99, 132, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function(tooltipItem) {
                            return tooltipItem.label + ': ' + tooltipItem.raw + ' bookings';
                        }
                    }
                }
            }
        }
    });
</script>
